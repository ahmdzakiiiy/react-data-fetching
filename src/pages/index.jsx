import Head from "next/head";
import { Inter } from "next/font/google";
import {
  Button,
  Container,
  FormControl,
  FormLabel,
  Heading,
  Input,
  Spinner,
  Table,
  Tbody,
  Td,
  Th,
  Thead,
  Tr,
  useToast,
  VStack,
} from "@chakra-ui/react";
import { useFetchProducts } from "@/features/product/useFetchProducts";
import { useMutation } from "@tanstack/react-query";
import { useFormik } from "formik";
import { axiosInstance } from "@/lib/axios";

export default function Home() {
  const {
    data,
    isLoading,
    refetch: refetchProducts,
  } = useFetchProducts();
  const toast = useToast();

  const formik = useFormik({
    initialValues: {
      name: "",
      price: "",
      stock: "",
      description: "",
      image: "",
    },
    onSubmit: async () => {
      const { name, price, stock, description, image } = formik.values;
      mutate({
        name,
        price: parseInt(price),
        stock: parseInt(stock),
        description,
        image,
      });
      formik.setFieldValue("name", "");
      formik.setFieldValue("price", 0);
      formik.setFieldValue("stock", 0);
      formik.setFieldValue("description", "");
      formik.setFieldValue("image", "");

      toast({
        title: "Product added",
        status: "success",
      });
    },
  });

  const { mutate } = useMutation({
    mutationFn: async (body) => {
      const productResponse = await axiosInstance.post("/products", body);

      return productResponse;
    },
    onSuccess: () => {
      refetchProducts();
    },
  });

  const handleFormInput = (event) => {
    formik.setFieldValue(event.target.name, event.target.value);
  };

  const renderProducts = () => {
    return data?.data.map((product) => {
      return (
        <Tr key={product.id}>
          <Td>{product.id}</Td>
          <Td>{product.name}</Td>
          <Td>{product.price}</Td>
          <Td>{product.stock}</Td>
          <Td>{product.description}</Td>
          <Td>{product.image}</Td>
        </Tr>
      );
    });
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Container>
          <Heading>Hello World</Heading>
          <Table mb="7">
            <Thead>
              <Tr>
                <Th>ID</Th>
                <Th>Name</Th>
                <Th>Price</Th>
                <Th>Stock</Th>
                <Th>Description</Th>
                <Th>Image</Th>
              </Tr>
            </Thead>

            <Tbody>
              {renderProducts()}
              {isLoading && <Spinner />}
            </Tbody>
          </Table>
          <text>{formik.values.name}</text>
          <form onSubmit={formik.handleSubmit}>
            <VStack spacing="3">
              <FormControl>
                <FormLabel>Product Name:</FormLabel>
                <Input
                  onChange={handleFormInput}
                  name="name"
                  values={formik.values.name}
                />
              </FormControl>
              <FormControl>
                <FormLabel>Price:</FormLabel>
                <Input
                  onChange={handleFormInput}
                  name="price"
                  values={formik.values.price}
                />
              </FormControl>
              <FormControl>
                <FormLabel>Stock:</FormLabel>
                <Input
                  onChange={handleFormInput}
                  name="stock"
                  values={formik.values.stock}
                />
              </FormControl>
              <FormControl>
                <FormLabel>Description:</FormLabel>
                <Input
                  onChange={handleFormInput}
                  name="description"
                  values={formik.values.description}
                />
              </FormControl>
              <FormControl>
                <FormLabel>Image:</FormLabel>
                <Input
                  onChange={handleFormInput}
                  name="image"
                  values={formik.values.image}
                />
              </FormControl>
              <Button type="submit">Submit Product</Button>
            </VStack>
          </form>
        </Container>
      </main>
    </>
  );
}
